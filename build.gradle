buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'mod.stf.syconn'
version = '1.1.0'

mixin {
    add sourceSets.main, "swe.refmap.json"
    config "swe.mixins.json"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: "2023.06.26-1.19.4"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'swe'
            mods {
                spacewardexpansion {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'swe'


            mods {
                spacewardexpansion {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'swe'
            mods {
                spacewardexpansion {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'swe', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                spacewardexpansion {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.spongepowered.org/repository/maven-public/'
        content { includeGroup "org.spongepowered" }
    }
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.1.0'
    implementation fg.deobf('curse.maven:configured-457570:4462894')
    compileOnly(fg.deobf("mezz.jei:jei-1.19.4-common-api:13.1.0.16"))
    compileOnly(fg.deobf("mezz.jei:jei-1.19.4-forge-api:13.1.0.16"))
    runtimeOnly(fg.deobf("mezz.jei:jei-1.19.4-forge:13.1.0.16"))
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "StarForge",
                "Specification-Vendor"    : "Syconn",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Syconn",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "swe.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')
